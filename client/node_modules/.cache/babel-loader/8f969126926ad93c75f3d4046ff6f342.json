{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\titan\\\\Desktop\\\\LambdaGit\\\\web-sprint-challenge-advanced-web-applications\\\\client\\\\src\\\\components\\\\ColorList.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nconst initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n};\n\nconst ColorList = ({\n  colors,\n  updateColors\n}) => {\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n  const [newColor, setNewColor] = useState(initialColor);\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = e => {\n    e.preventDefault(); // Make a put request to save your updated color\n\n    axiosWithAuth().put(`/api/colors/${colorToEdit.id}`, colorToEdit).then(res => {\n      updateColors(res.data);\n    }).catch(err => console.error(err.message)); // think about where will you get the id from...\n    // where is is saved right now?\n  };\n\n  const deleteColor = color => {\n    // make a delete request to delete this color\n    axiosWithAuth().delete(`/api/colors/${color.id}`).then(response => {\n      console.log(response);\n      updateColors(colors.filter(colorId => colorId.id !== color.id));\n    }).catch(error => console.log(error));\n  };\n\n  const addColor = e => {\n    e.preventDefault();\n    axiosWithAuth().post(\"http://localhost:5000/api/colors\", newColor).then(response => {\n      updateColors(response.data);\n      setNewColor(initialColor);\n    }).catch(error => console.log(error));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, colors.map(color => React.createElement(\"li\", {\n    key: color.color,\n    onClick: () => editColor(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"delete\",\n    onClick: e => {\n      e.stopPropagation();\n      deleteColor(color);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"x\"), \" \", color.color), React.createElement(\"div\", {\n    className: \"color-box\",\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })))), editing && React.createElement(\"form\", {\n    onSubmit: saveEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"edit color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      color: e.target.value\n    }),\n    value: colorToEdit.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: colorToEdit.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: () => setEditing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"cancel\"))), React.createElement(\"div\", {\n    className: \"spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"addColorFormContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: addColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"add your new color\"), React.createElement(\"label\", {\n    className: \"addColorLabel\",\n    htmlFor: \"color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    className: \"addColorInput\",\n    type: \"text\",\n    name: \"color\",\n    id: \"color\",\n    value: newColor.color,\n    onChange: event => {\n      setNewColor({ ...newColor,\n        color: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"addColorLabel\",\n    htmlFor: \"hex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    className: \"addColorInput\",\n    type: \"text\",\n    name: \"hex\",\n    id: \"hex\",\n    value: newColor.code.hex,\n    onChange: event => {\n      setNewColor({ ...newColor,\n        code: {\n          hex: event.target.value\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"addColorButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Add your own color!\"))));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["C:/Users/titan/Desktop/LambdaGit/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","axios","axiosWithAuth","initialColor","color","code","hex","ColorList","colors","updateColors","console","log","editing","setEditing","colorToEdit","setColorToEdit","newColor","setNewColor","editColor","saveEdit","e","preventDefault","put","id","then","res","data","catch","err","error","message","deleteColor","delete","response","filter","colorId","addColor","post","map","stopPropagation","backgroundColor","target","value","event"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\r\n\r\nconst initialColor = {\r\n  color: \"\",\r\n  code: { hex: \"\" },\r\n};\r\n\r\nconst ColorList = ({ colors, updateColors }) => {\r\n  console.log(colors);\r\n  const [editing, setEditing] = useState(false);\r\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\r\n  const [newColor, setNewColor] = useState(initialColor);\r\n\r\n  const editColor = (color) => {\r\n    setEditing(true);\r\n    setColorToEdit(color);\r\n  };\r\n\r\n  const saveEdit = (e) => {\r\n    e.preventDefault();\r\n    // Make a put request to save your updated color\r\n    axiosWithAuth()\r\n      .put(`/api/colors/${colorToEdit.id}`, colorToEdit)\r\n      .then((res) => {\r\n        updateColors(res.data);\r\n      })\r\n      .catch((err) => console.error(err.message));\r\n    // think about where will you get the id from...\r\n    // where is is saved right now?\r\n  };\r\n\r\n  const deleteColor = (color) => {\r\n    // make a delete request to delete this color\r\n    axiosWithAuth()\r\n      .delete(`/api/colors/${color.id}`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        updateColors(colors.filter((colorId) => colorId.id !== color.id));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const addColor = (e) => {\r\n    e.preventDefault();\r\n    axiosWithAuth()\r\n      .post(\"http://localhost:5000/api/colors\", newColor)\r\n      .then((response) => {\r\n        updateColors(response.data);\r\n        setNewColor(initialColor);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"colors-wrap\">\r\n      <p>colors</p>\r\n      <ul>\r\n        {colors.map((color) => (\r\n          <li key={color.color} onClick={() => editColor(color)}>\r\n            <span>\r\n              <span\r\n                className=\"delete\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  deleteColor(color);\r\n                }}\r\n              >\r\n                x\r\n              </span>{\" \"}\r\n              {color.color}\r\n            </span>\r\n            <div\r\n              className=\"color-box\"\r\n              style={{ backgroundColor: color.code.hex }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {editing && (\r\n        <form onSubmit={saveEdit}>\r\n          <legend>edit color</legend>\r\n          <label>\r\n            color name:\r\n            <input\r\n              onChange={(e) =>\r\n                setColorToEdit({ ...colorToEdit, color: e.target.value })\r\n              }\r\n              value={colorToEdit.color}\r\n            />\r\n          </label>\r\n          <label>\r\n            hex code:\r\n            <input\r\n              onChange={(e) =>\r\n                setColorToEdit({\r\n                  ...colorToEdit,\r\n                  code: { hex: e.target.value },\r\n                })\r\n              }\r\n              value={colorToEdit.code.hex}\r\n            />\r\n          </label>\r\n          <div className=\"button-row\">\r\n            <button type=\"submit\">save</button>\r\n            <button onClick={() => setEditing(false)}>cancel</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n      <div className=\"spacer\" />\r\n      {/* stretch - build another form here to add a color */}\r\n      <div className=\"addColorFormContainer\">\r\n        <form onSubmit={addColor}>\r\n          <legend>add your new color</legend>\r\n          <label className=\"addColorLabel\" htmlFor=\"color\">\r\n            color name:\r\n            <input\r\n              className=\"addColorInput\"\r\n              type=\"text\"\r\n              name=\"color\"\r\n              id=\"color\"\r\n              value={newColor.color}\r\n              onChange={(event) => {\r\n                setNewColor({\r\n                  ...newColor,\r\n                  color: event.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </label>\r\n          <label className=\"addColorLabel\" htmlFor=\"hex\">\r\n            hex code:\r\n            <input\r\n              className=\"addColorInput\"\r\n              type=\"text\"\r\n              name=\"hex\"\r\n              id=\"hex\"\r\n              value={newColor.code.hex}\r\n              onChange={(event) => {\r\n                setNewColor({\r\n                  ...newColor,\r\n                  code: { hex: event.target.value },\r\n                });\r\n              }}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"addColorButton\">\r\n            Add your own color!\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorList;\r\n"]},"metadata":{},"sourceType":"module"}